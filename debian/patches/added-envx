Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 moreutils (0.57) unstable; urgency=medium
 .
   * Avoid using non-portable error() in ifdata, a portability reversion
     introduced in 0.56.
Author: Joey Hess <id@joeyh.name>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- moreutils-0.57.orig/Makefile
+++ moreutils-0.57/Makefile
@@ -1,22 +1,34 @@
-BINS=isutf8 ifdata ifne pee sponge mispipe lckdo parallel errno
+BINS=isutf8 ifdata ifne pee sponge mispipe lckdo parallel errno envx
 PERLSCRIPTS=vidir vipe ts combine zrun chronic
 MANS=sponge.1 vidir.1 vipe.1 isutf8.1 ts.1 combine.1 ifdata.1 ifne.1 pee.1 zrun.1 chronic.1 mispipe.1 lckdo.1 parallel.1 errno.1
 CFLAGS?=-O2 -g -Wall
 INSTALL_BIN?=install -s
 PREFIX?=/usr
+LIBDIR=/usr/local/lib
 
 DOCBOOK2XMAN=xsltproc --param man.authors.section.enabled 0 /usr/share/xml/docbook/stylesheet/docbook-xsl/manpages/docbook.xsl
 
-all: $(BINS) $(MANS)
+all: lib-envx.so envx $(BINS) $(MANS)
+
+lib-envx.o:
+	gcc -fPIC -c -o lib-envx.o lib-envx.c
+
+lib-envx.so: lib-envx.o
+	gcc -shared -o lib-envx.so -Wall lib-envx.o
+
+envx: envx.o lib-envx.so
+	gcc -Wall -o envx envx.o lib-envx.so
 
 clean:
-	rm -f $(BINS) $(MANS) dump.c errnos.h errno.o
+	rm -f $(BINS) $(MANS) dump.c errnos.h errno.o *.o *.so
 
 install:
 	mkdir -p $(DESTDIR)$(PREFIX)/bin
 	$(INSTALL_BIN) $(BINS) $(DESTDIR)$(PREFIX)/bin
 	install $(PERLSCRIPTS) $(DESTDIR)$(PREFIX)/bin
-	
+	install lib-envx.so $(LIBDIR)/lib-envx.so
+	ldconfig
+		
 	mkdir -p $(DESTDIR)$(PREFIX)/share/man/man1
 	install $(MANS) $(DESTDIR)$(PREFIX)/share/man/man1
 
--- /dev/null
+++ moreutils-0.57/README.md
@@ -0,0 +1 @@
+# lab4
--- /dev/null
+++ moreutils-0.57/envx.c
@@ -0,0 +1,19 @@
+#include "stdio.h"
+int main(int argc, char *argv[])
+
+{
+  int i;
+  char *pid;
+  // переданы ли pid
+  if (argc < 2)
+  {
+    printf("Ошибка. Введите pwdx pid1 [pid2]\n");
+    return 1;
+  }
+  else
+  {
+    for (i=1;i<argc;i++)
+    envx(argv[i]);
+  }
+  return 0;
+} 
--- /dev/null
+++ moreutils-0.57/lib-envx.c
@@ -0,0 +1,34 @@
+#include "stdlib.h"
+#include "string.h"
+#include "stdio.h"
+#include "errno.h"
+
+#define MAX_ENV_SIZE 4096
+
+int envx (char * pid)
+{
+  int i,len;
+  char *path_buf = malloc(MAX_ENV_SIZE);
+  char *buf, *s;
+  ssize_t buf_len;
+  buf_len = 14 + strlen(pid) + 1;
+  buf = malloc(buf_len);
+  sprintf(buf,"/proc/%s/environ",pid);
+  FILE *f;
+  f = fopen(buf,"r");
+  if (f == NULL)
+  {
+    s = strerror(errno == ENOENT ? ESRCH : errno);
+    fprintf(stderr, "%s: %s\n", pid, s);
+    free(path_buf);
+    return 1;
+  }
+  while ((len = fread(path_buf, 1, MAX_ENV_SIZE-1, f)) > 0)
+  {
+    for (i = 0; i < len; i++)
+      if (path_buf[i] == 0) path_buf[i] = 10;
+    path_buf[len] = 0;
+    printf("%s", path_buf);
+  }
+  return 0;
+}
